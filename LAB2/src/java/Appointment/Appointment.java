package Appointment;

import dao.MedicalExaminationDAO;
import dao.ProfessionalDAO;
import dao.ServiceDAO;
import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;
import java.io.IOException;
import java.io.PrintWriter;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import model.Customer;
import model.MedicalExamination;
import model.Professional;
import model.Service;

/**
 *
 * @author ADMIN
 */
public class Appointment extends HttpServlet {

    private ServiceDAO serviceDAO = new ServiceDAO();
    private ProfessionalDAO professionalDAO = new ProfessionalDAO();
    private MedicalExaminationDAO medicalExaminationDAO = new MedicalExaminationDAO();

    /**
     * Handles the HTTP <code>GET</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        List<Service> services = serviceDAO.getAllService();
        List<Professional> doctors = professionalDAO.getAllDoctors();

        request.setAttribute("services", services);
        request.setAttribute("doctors", doctors);

        request.getRequestDispatcher("appointment.jsp").forward(request, response);
    }

    /**
     * Handles the HTTP <code>POST</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        HttpSession session = request.getSession();
        Customer customerProfile = (Customer) session.getAttribute("customerAccount");

        if (customerProfile == null) {
            response.sendRedirect("login.jsp");
            return;
        }

        // Retrieve form data
        String[] serviceIds = request.getParameterValues("serviceIds[]"); // Array of selected service IDs
        String doctorId = request.getParameter("doctorId");
        String examinationDate = request.getParameter("date") + " " + request.getParameter("time"); // Combine date and time
        String name = request.getParameter("name");
        String phone = request.getParameter("phone");
        String message = request.getParameter("message");

        // Get current timestamp for createdAt
        String createdAt = LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss"));

        // Fetch Professional object based on doctorId
        Professional doctor = professionalDAO.getProfessionalbyID(Integer.parseInt(doctorId));

        // Fetch selected services
        List<Service> selectedServices = new ArrayList<>();
        if (serviceIds != null) {
            for (String serviceId : serviceIds) {
                Service service = serviceDAO.getServiceById(Integer.parseInt(serviceId));
                if (service != null) {
                    selectedServices.add(service);
                }
            }
        }

        // Create MedicalExamination object
        MedicalExamination examination = new MedicalExamination();
        examination.setExaminationID(0); // Assuming ID is auto-generated by the database
        examination.setExaminationDate(examinationDate);
        examination.setCustomerId(customerProfile);
        examination.setStatus("Pending"); // Default status
        examination.setConsultantId(doctor);
        examination.setNote(message);
        examination.setCreatedAt(createdAt);
        examination.setList(selectedServices);

        // Save to database using DAO
        boolean success = medicalExaminationDAO.saveMedicalExamination(examination);

        if (success) {
            // Redirect to a success page or show a success message
            response.sendRedirect("confirmation.jsp");
        } else {
            // Handle failure (e.g., show error message)
            request.setAttribute("error", "Failed to book appointment. Please try again.");
            request.getRequestDispatcher("appointment.jsp").forward(request, response);
        }
    }

    /**
     * Returns a short description of the servlet.
     *
     * @return a String containing servlet description
     */
    @Override
    public String getServletInfo() {
        return "Handles appointment booking for medical examinations";
    }
}